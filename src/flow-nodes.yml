flow-nodes:
  comprehend-sdk:
    name: Comprehend-SDK
    icon: amazon-comprehend.svg
    description: AWS Comprehend SDK Flow Node to Expose Comprehend NLP methods
    category: NLP
    methods:
      detectSentiment: # This same key is used in `actions.js`
        name: Detect Sentiment
        description: Detect sentiment.
        parameters:
          LanguageCode:
            name: LanguageCode
            description: The language of the input text. You can specify any of the primary languages supported by Amazon Comprehend (en | es | fr | de | it | pt | ar | hi | ja | ko | zh | zh-TW).
            required: false
            initialType: string
            schema:
              type: string
              default: en
              example: es
          Text:
            name: Text
            description: A UTF-8 text string you want to detect the sentiment of. The string must contain fewer that 5,000 bytes of UTF-8 encoded characters.
            required: true
            initialType: string
            schema:
              type: string
              example: Today is my birthday, I am so happy.
        # "Next" (next) output
        returns:
          name: Next
          description: The sentiment retreived successfully.
          context: $.sentimentResponse
          schema:
            type: object
            properties:
              Sentiment:
                type: string
                description: The sentiment (POSITIVE, NEGATIVE, NEUTRAL, MIXED)
                example: POSITIVE
              SentimentScore:
                type: object
                properties:
                  Positive:
                    type: number
                    description: Confidence level
                    example: 0.9869875907897949
                  Negative:
                    type: number
                    description: Confidence level
                    example: 0.0010949420975521207
                  Mixed:
                    type: number
                    description: Confidence level
                    example: 0.0033542951568961143
                  Neutral:
                    type: number
                    description: Confidence level
                    example: 0.008563132025301456
        # "Error" (error) output
        throws:
          name: Error
          description: An unexpected error was encountered retrieving the sentiment.
          context: $.sentimentError
          schema:
            type: object
      detectDominantLanguage: # This same key is used in `actions.js`
        name: Detect Dominant Language
        description: Detect dominant language.
        parameters:
          Text:
            name: Text
            description: A UTF-8 text string you want to detect the dominant language of. The string must contain fewer that 5,000 bytes of UTF-8 encoded characters.
            required: true
            initialType: string
            schema:
              type: string
              example: Bob lives in Seattle. He is a software engineer at Axway.
        # "Next" (next) output
        returns:
          name: Next
          description: The dominant language retreived successfully.
          context: $.dominantLanguageResponse
          schema:
            type: object
            properties:
              Languages:
                type: array
                items:
                  LanguageCode:
                    type: string
                    description: The language detected
                    example: es
                  Score:
                    type: number
                    description: Confidence level
                    example: 0.9774383902549744
        # "Error" (error) output
        throws:
          name: Error
          description: An unexpected error was encountered retrieving the dominant language.
          context: $.dominantLanguageError
          schema:
            type: object
      detectPiiEntities: # This same key is used in `actions.js`
        name: Detect PII Entities
        description: Detect personally identifiable information.
        parameters:
          LanguageCode:
            name: LanguageCode
            description: The language of the input text. You can specify any of the primary languages supported by Amazon Comprehend (en | es | fr | de | it | pt | ar | hi | ja | ko | zh | zh-TW).
            required: false
            initialType: string
            schema:
              type: string
              default: en
              example: es
          Text:
            name: Text
            description: A UTF-8 text string you want to detect for PII entities. The string must contain fewer that 5,000 bytes of UTF-8 encoded characters.
            required: true
            initialType: string
            schema:
              type: string
              example: Hello Paulo Santos. The latest statement for your credit card account 1111-0000-1111-0000 was mailed to 123 Any Street, Seattle, WA 98109.
        # "Next" (next) output
        returns:
          name: Next
          description: The PII entities retreived successfully.
          context: $.piiEntitiesResponse
          schema:
            type: object
            properties:
              Entities:
                type: array
                items:
                  Type:
                    type: string
                    description: The entity's type (BANK_ACCOUNT_NUMBER, BANK_ROUTING, CREDIT_DEBIT_NUMBER, SSN, ...)
                    example: PASSWORD
                  Score:
                    type: number
                    description: Confidence level
                    example: 0.9774383902549744
                  BeginOffset:
                    type: number
                    description: A character offset in the input text that shows where the PII entity begins (the first character is at position 0).
                    example: 11
                  EndOffset:
                    type: number
                    description: A character offset in the input text that shows where the PII entity ends.
                    example: 22
        # "Error" (error) output
        throws:
          name: Error
          description: An unexpected error was encountered retrieving the sentiment.
          context: $.piiEntitiesError
          schema:
            type: object
